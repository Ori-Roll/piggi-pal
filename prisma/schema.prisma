// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String   @id @default(cuid())
  email                 String   @unique
  name                  String?
  accounts              Account[]
  googleId              String?
  parentLock            ParentLock?
  lastOpenedAccountId   String?
}

model ParentLock {
  id         String   @id  @default(cuid()) 
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String   @unique
  pin        Int
  question   String?
  answer     String?
}

model Account {
  id        String     @id @default(cuid())
  kidName   String
  current   Int        @default(0)
  periodics Periodic[]
  tasks     Task[]
  transactions Transaction[]
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String    

}

enum ActionType {
  ADD
  SUBTRACT
  ADDRATE
}

enum TransactionReason {
  PERIODIC
  MANUAL
  PAYMENT
  TASK
  CHORE
}

enum Interval {
  DAY
  WEEK
  BIWEEK
  MONTH
  YEAR
}
model Periodic {
  id                      String       @id @default(cuid())
  name                    String
  title                   String
  actionType              ActionType
  amount                  Int?
  task                    Task?
  interval                Interval
  nextOccurrence          DateTime?
  startsAt                DateTime?
  endsAt                  DateTime?
  transactions            Transaction[] 
  account                 Account?      @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId               String       
}

model Transaction {
  id         String     @id @default(cuid())
  type       ActionType
  reason     TransactionReason
  amount     Int
  executedAt DateTime
  viewed     Boolean    @default(false)
  periodic   Periodic?  @relation(fields: [periodicId], references: [id], onDelete: Cascade)
  periodicId String?
  account    Account?   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId  String
}


model Task {
  id                  String   @id @default(cuid())
  availableAt         DateTime?
  expiresAt           DateTime?
  title               String
  description         String?
  account             Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId           String
  completed           Boolean  @default(false)
  completedAt         DateTime?
  amount              Int?
  requiredTimes       Int?
  accomplishedTimes   Int?
  periodic            Periodic? @relation(fields: [periodicId], references: [id], onDelete: Cascade)
  periodicId          String?    @unique
}
